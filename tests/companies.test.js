// connect to right DB --- set before loading db.js
require('dotenv').config()
process.env.NODE_ENV = "test";

// npm packages
const request = require("supertest");

// file imports
const db = require("../db");
const app = require('../app');
const testData = require('./test_setup');


beforeEach(testData);

afterAll(async () => {
    // close db connection
    await db.end();
});

/**GET /companies : Returns list of companies, like {companies: [{code, name}, ...]} */
describe("GET /companies", function() {
    test("Gets a list of companies", async function() {
        const response = await request(app).get(`/companies`);
        expect(response.statusCode).toEqual(200);
        expect(response.body).toEqual({
            "companies": [
                {
                    "code": "apple",
                    "name": "Apple Computer"
                },
                {
                    "code": "ibm",
                    "name": "IBM"
                }
            ]
        });
    });
});


/**GET /companies/[code] : Return obj of company: {company: {code, name, description, invoices: [id, ...]}}
 * If the company given cannot be found, this should return a 404 status response.
 */
describe("GET /companies/:code", function() {
    test("Gets a single company", async function() {
        const response = await request(app).get(`/companies/ibm`);
        expect(response.statusCode).toEqual(200);
        expect(response.body).toEqual({
            "company":
                {
                    "code": "ibm",
                    "name": "IBM",
                    "description": "Big blue.",
                    "invoices": [
                        4
                    ]
                }
        });
    });

    test("Responds with 404 if can't find a company", async function() {
        const response = await request(app).get(`/companies/amz`);
        expect(response.statusCode).toEqual(404);
    });
});


/** Adds a company. Needs to be given JSON like: {code, name, description}
 * Returns obj of new company:  {company: {code, name, description}}
 */
describe("POST /companies", function() {
    test("Add a new company", async function() {
        const response = await request(app)
            .post(`/companies`)
            .send({
                "name": "Amazon",
                "description": "eCommerce giant"
            });
        expect(response.statusCode).toEqual(201);
        expect(response.body).toEqual({
            "company": {
                "code": "amazon",
                "name": "Amazon",
                "description": "eCommerce giant"
            }
        });
    });
});


/** Edit existing company. Should return 404 if company cannot be found.
 * Needs to be given JSON like: {name, description} 
 * Returns update company object: {company: {code, name, description}}
 */
describe("PATCH /companies/:code", function() {
    test("Update a single company", async function() {
        const response = await request(app)
            .patch(`/companies/ibm`)
            .send({
                "name": "International Business Machines",
	            "description": "IBM is the largest industrial research organization in the world, with 19 research facilities across a dozen countries, having held the record for most annual U.S. patents generated by a business for 29 consecutive years from 1993 to 2021."
            });
        expect(response.statusCode).toEqual(200);
        expect(response.body).toEqual({
            "company":
                {
                    "code": "ibm",
                    "name": "International Business Machines",
                    "description": "IBM is the largest industrial research organization in the world, with 19 research facilities across a dozen countries, having held the record for most annual U.S. patents generated by a business for 29 consecutive years from 1993 to 2021."
                }
        });
    });

    test("Responds with 404 if can't find a company", async function() {
        const response = await request(app).patch(`/companies/amz`);
        expect(response.statusCode).toEqual(404);
    });
});


/** Deletes company. Should return 404 if company cannot be found.
 * Returns {status: "deleted"} */
describe("DELETE /companies/:code", function() {
    test("Delete a single company", async function() {
        const response = await request(app)
            .delete(`/companies/ibm`);
        expect(response.statusCode).toEqual(200);
        expect(response.body).toEqual({
            "status": "Deleted"
        });
    });

    test("Responds with 404 if can't find a company", async function() {
        const response = await request(app).delete(`/companies/amz`);
        expect(response.statusCode).toEqual(404);
    });
});